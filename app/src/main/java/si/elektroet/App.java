/*
 * This source file was generated by the Gradle 'init' task
 */
package si.elektroet;

import java.awt.AWTException;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.Optional;
import java.util.logging.FileHandler;
import java.util.logging.Logger;
import java.util.logging.SimpleFormatter;

public class App {
    public static void main(String[] args) {
        Logger logger = initializeLogger().orElseThrow();

        try (Server server = new Server(logger)) {
            server.start();
        } catch (IOException e) {
            logger.info("Failed to initialize socket connections.");
            e.printStackTrace();
        } catch (AWTException e) {
            logger.info("Failed to initialize keyboard writing tool.");
            e.printStackTrace();
        }
    }

    private static Optional<Logger> initializeLogger() {
        try {
            Logger logger = Logger.getLogger("Server");

            String projectRoot = System.getProperty("user.dir");
            Path logDir = Path.of(projectRoot, "logs");
            Files.createDirectories(logDir);

            FileHandler fileHandler = new FileHandler(logDir.resolve("logs.txt").toString(), true);
            logger.addHandler(fileHandler);

            SimpleFormatter formatter = new SimpleFormatter();
            fileHandler.setFormatter(formatter);

            return Optional.of(logger);
        } catch (IOException e) {
            e.printStackTrace();
            return Optional.empty();
        }
    }
}
